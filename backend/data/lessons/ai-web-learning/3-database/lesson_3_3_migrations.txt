# –£—Ä–æ–∫ 3.3: –ú–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å—Ö–µ–º–∞ –ë–î - –≠–≤–æ–ª—é—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö

> **–ú–æ–¥—É–ª—å 3:** –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö  
> **–£—Ä–æ–∫:** 3.3  
> **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** 50-65 –º–∏–Ω—É—Ç  
> **Prerequisite:** –£—Ä–æ–∫ 3.2 (PostgreSQL –∏ SQLAlchemy ORM)

---

## üéØ –¶–µ–ª–∏ —É—Ä–æ–∫–∞

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ —Ç—ã —Å–º–æ–∂–µ—à—å:
- ‚úÖ –ü–æ–Ω–∏–º–∞—Ç—å —á—Ç–æ —Ç–∞–∫–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –∏ –∑–∞—á–µ–º –æ–Ω–∏ –Ω—É–∂–Ω—ã
- ‚úÖ –û–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã –ë–î –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π (–ø–æ—Ç–µ—Ä—è –¥–∞–Ω–Ω—ã—Ö!)
- ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Alembic –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ SQLAlchemy
- ‚úÖ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Claude Code
- ‚úÖ –ü–æ–Ω–∏–º–∞—Ç—å –∫–∞–∫ –æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è (rollback)
- ‚úÖ –†–∞–±–æ—Ç–∞—Ç—å —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –≤ –∫–æ–º–∞–Ω–¥–µ (Git + –º–∏–≥—Ä–∞—Ü–∏–∏)

---

## üìñ –ö–æ–Ω—Ü–µ–ø—Ü–∏—è: –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î?

### –ü—Ä–æ—Å—Ç–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ

**–ú–∏–≥—Ä–∞—Ü–∏—è –ë–î (Database Migration)** - —ç—Ç–æ –≤–µ—Ä—Å–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–ª—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ö–∞–∫ Git –¥–ª—è –∫–æ–¥–∞, –Ω–æ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü. –ú–∏–≥—Ä–∞—Ü–∏—è = –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π "–∫–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ö–µ–º—É –ë–î" (–¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É, —É–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É, –∏ —Ç.–¥.).

**–ë–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π:**
```sql
-- –¢—ã –≤—Ä—É—á–Ω—É—é –º–µ–Ω—è–µ—à—å —Å—Ö–µ–º—É —á–µ—Ä–µ–∑ SQL:
ALTER TABLE projects ADD COLUMN status VARCHAR(50);

-- –ü—Ä–æ–±–ª–µ–º—ã:
-- ‚ùå –ö–æ–ª–ª–µ–≥–∞ –Ω–µ –∑–Ω–∞–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
-- ‚ùå Production –ë–î –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞
-- ‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
-- ‚ùå –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
```

**–° –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ (Alembic):**
```python
# –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:
alembic revision --autogenerate -m "Add status to projects"

# –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π:
alembic upgrade head

# –ú–æ–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å:
alembic downgrade -1

# –ò—Å—Ç–æ—Ä–∏—è –≤–µ—Ä—Å–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Git
```

### –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏

**–ü—Ä–µ–¥—Å—Ç–∞–≤—å —Å–∏—Ç—É–∞—Ü–∏—é:**
1. –¢—ã —Å–æ–∑–¥–∞–ª —Ç–∞–±–ª–∏—Ü—É `projects` —Å –ø–æ–ª—è–º–∏: `id`, `name`
2. –í –ë–î —É–∂–µ 100 –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
3. –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ `description`
4. **–ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ë–ï–ó –ø–æ—Ç–µ—Ä–∏ 100 –ø—Ä–æ–µ–∫—Ç–æ–≤?**

**–ë–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π:**
```sql
-- –û–ü–ê–°–ù–û! –ú–æ–∂–Ω–æ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ
DROP TABLE projects;
CREATE TABLE projects (..., description TEXT);
-- ‚ùå –í—Å–µ 100 –ø—Ä–æ–µ–∫—Ç–æ–≤ —É–¥–∞–ª–µ–Ω—ã!
```

**–° –º–∏–≥—Ä–∞—Ü–∏—è–º–∏:**
```python
# Alembic —Å–æ–∑–¥–∞—ë—Ç –º–∏–≥—Ä–∞—Ü–∏—é:
# "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É description –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ"
# ‚úÖ –í—Å–µ 100 –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!
```

**–ú–∏–≥—Ä–∞—Ü–∏–∏ = –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —ç–≤–æ–ª—é—Ü–∏—è –ë–î –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö!**

---

## üè™ –ê–Ω–∞–ª–æ–≥–∏—è: –í–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ Google Docs

–ü—Ä–µ–¥—Å—Ç–∞–≤—å —á—Ç–æ —Ç—ã –ø–∏—à–µ—à—å –¥–æ–∫—É–º–µ–Ω—Ç –≤ Google Docs —Å –∫–æ–º–∞–Ω–¥–æ–π:

### –ë–µ–∑ –≤–µ—Ä—Å–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è (–ë–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π)

```
–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:
üìÑ –î–æ–∫—É–º–µ–Ω—Ç v1: "–û—Ç—á—ë—Ç 2025"
   - –ì–ª–∞–≤–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ
   - –ì–ª–∞–≤–∞ 2: –ê–Ω–∞–ª–∏–∑

–í—Ç–æ—Ä–Ω–∏–∫:
–ö–æ–ª–ª–µ–≥–∞ –æ—Ç–∫—Ä—ã–ª –¥–æ–∫—É–º–µ–Ω—Ç –∏ –¥–æ–±–∞–≤–∏–ª "–ì–ª–∞–≤–∞ 3: –í—ã–≤–æ–¥—ã"
‚ùì –¢—ã –Ω–µ –∑–Ω–∞–µ—à—å —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!

–°—Ä–µ–¥–∞:
–¢—ã —Å–ª—É—á–∞–π–Ω–æ —É–¥–∞–ª–∏–ª –ì–ª–∞–≤—É 2
‚ùå –ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å? –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Ç–µ—Ä—è–Ω–∞!

–ß–µ—Ç–≤–µ—Ä–≥:
–ù—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –≤–µ—Ä—Å–∏—é –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞
‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ! –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π
```

**–ü—Ä–æ–±–ª–µ–º—ã:**
- –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
- –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è
- –ö–æ–ª–ª–µ–≥–∏ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã

---

### –° –≤–µ—Ä—Å–∏–æ–Ω–Ω—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º (–° –º–∏–≥—Ä–∞—Ü–∏—è–º–∏)

```
–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:
üìÑ Version 1: "–û—Ç—á—ë—Ç 2025"
   - –ì–ª–∞–≤–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ
   - –ì–ª–∞–≤–∞ 2: –ê–Ω–∞–ª–∏–∑
   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏

–í—Ç–æ—Ä–Ω–∏–∫:
üìÑ Version 2: –ö–æ–ª–ª–µ–≥–∞ –¥–æ–±–∞–≤–∏–ª "–ì–ª–∞–≤–∞ 3: –í—ã–≤–æ–¥—ã"
   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ: "–î–æ–±–∞–≤–ª–µ–Ω–∞ –ì–ª–∞–≤–∞ 3 (–ö–æ–ª–ª–µ–≥–∞, 2025-10-12)"
   ‚úÖ –í—Å–µ –≤–∏–¥—è—Ç —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

–°—Ä–µ–¥–∞:
–¢—ã —Å–ª—É—á–∞–π–Ω–æ —É–¥–∞–ª–∏–ª –ì–ª–∞–≤—É 2
   ‚úÖ –í–∏–¥–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏: "–£–¥–∞–ª–µ–Ω–∞ –ì–ª–∞–≤–∞ 2 (–¢—ã, 2025-10-13)"
   ‚úÖ –ú–æ–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å –∫ Version 2

–ß–µ—Ç–≤–µ—Ä–≥:
–ù—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –≤–µ—Ä—Å–∏—é –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞
   ‚úÖ –õ–µ–≥–∫–æ! –û—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ Version 1
   ‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω—ã
```

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
- ‚úÖ –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
- ‚úÖ –ú–æ–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ –ª—é–±–æ–π –≤–µ—Ä—Å–∏–∏
- ‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
- ‚úÖ –ü–æ–Ω—è—Ç–Ω–æ –∫—Ç–æ –∏ —á—Ç–æ –º–µ–Ω—è–ª

**Alembic –¥–ª—è –ë–î = Version History –¥–ª—è Google Docs!**

---

## üí° –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è (–ö–†–ò–¢–ò–ß–ù–û!)

### –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î

**‚úÖ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è:**

1. **Production –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è**
   - –ë–î —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
   - –ù–µ–ª—å–∑—è –ø–æ—Ç–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ
   - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

2. **–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞**
   - –ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
   - –ù—É–∂–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –ë–î
   - Git + –º–∏–≥—Ä–∞—Ü–∏–∏ = –≤—Å–µ –Ω–∞ –æ–¥–Ω–æ–π –≤–µ—Ä—Å–∏–∏

3. **Continuous Deployment**
   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π deploy
   - CI/CD pipeline –ø—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
   - –ù–µ—Ç —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞

4. **–õ—é–±–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î:**
   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
   - –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞
   - –ò–∑–º–µ–Ω–µ–Ω–∏–µ Foreign Key

---

### –ö–æ–≥–¥–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ù–ï –∫—Ä–∏—Ç–∏—á–Ω—ã (–Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è)

**‚ö†Ô∏è –ú–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π:**

1. **–õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–µ–∫—Ç–∞**
   - –¢–æ–ª—å–∫–æ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å
   - –ë–î –ø—É—Å—Ç–∞—è (–Ω–µ—Ç –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
   - –ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å –∑–∞–Ω–æ–≤–æ

2. **–ü—Ä–æ—Ç–æ—Ç–∏–ø—ã –∏ MVP**
   - –°—Ö–µ–º–∞ –º–µ–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å
   - –ù–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   - –ú–æ–∂–Ω–æ –¥—Ä–æ–ø–Ω—É—Ç—å –ë–î

**–ù–û!** –ö–∞–∫ —Ç–æ–ª—å–∫–æ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Üí –º–∏–≥—Ä–∞—Ü–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.

---

## üîß –¢—Ä–∏ —Ç–∏–ø–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∫—É—Ä—Å–∞ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π

### 1. EngineCamPro v2 (FastAPI + React)

**–ò—Å–ø–æ–ª—å–∑—É–µ–º: Alembic** ‚úÖ

**–ü–æ—á–µ–º—É:**
```
Development ‚Üí Staging ‚Üí Production

–°—Ö–µ–º–∞ –ë–î —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç:
Version 1: Users, Projects, Cams (–±–∞–∑–æ–≤—ã–µ –ø–æ–ª—è)
Version 2: –î–æ–±–∞–≤–∏–ª–∏ –ø–æ–ª–µ Projects.status
Version 3: –î–æ–±–∞–≤–∏–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–∞ Cams.cam_type
Version 4: –î–æ–±–∞–≤–∏–ª–∏ —Ç–∞–±–ª–∏—Ü—É Subscriptions

–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç:
‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å Production –ë–î
‚úÖ –û—Ç–∫–∞—Ç–∏—Ç—å—Å—è –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ–¥–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å—Ö–µ–º—ã
‚úÖ CI/CD –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
```

**Workflow:**
```bash
# 1. –ò–∑–º–µ–Ω–∏–ª –º–æ–¥–µ–ª—å –≤ models/project.py
class Project(Base):
    status = Column(String(50))  # –ù–æ–≤–æ–µ –ø–æ–ª–µ!

# 2. –°–æ–∑–¥–∞–ª –º–∏–≥—Ä–∞—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
alembic revision --autogenerate -m "Add status to projects"

# 3. –ü—Ä–æ–≤–µ—Ä–∏–ª –º–∏–≥—Ä–∞—Ü–∏—é
cat alembic/versions/xxx_add_status.py

# 4. –ü—Ä–∏–º–µ–Ω–∏–ª –ª–æ–∫–∞–ª—å–Ω–æ
alembic upgrade head

# 5. –ó–∞–∫–æ–º–º–∏—Ç–∏–ª –≤ Git
git add alembic/versions/xxx_add_status.py
git commit -m "Add project status field"

# 6. Deploy –Ω–∞ production - –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
```

---

### 2. –ë—ã—Å—Ç—Ä—ã–µ Full-Stack –ø—Ä–æ–µ–∫—Ç—ã (Next.js)

**–ò—Å–ø–æ–ª—å–∑—É–µ–º: Prisma Migrate** ‚úÖ

**–ü–æ—á–µ–º—É:**
```typescript
// Next.js –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Prisma ORM (–Ω–µ SQLAlchemy)

// schema.prisma
model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?  // –ù–æ–≤–æ–µ –ø–æ–ª–µ!
  published Boolean  @default(false)
}

// –°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é:
npx prisma migrate dev --name add_content_to_post

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞ production:
npx prisma migrate deploy
```

**–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Alembic:**
- ‚ùå Alembic –¥–ª—è Python/SQLAlchemy
- ‚úÖ Prisma Migrate –¥–ª—è JavaScript/TypeScript

---

### 3. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ (RAG + AI)

**–ò—Å–ø–æ–ª—å–∑—É–µ–º: Alembic + —Ä—É—á–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è pgvector** üîÑ

**–ü–æ—á–µ–º—É:**
```python
# FastAPI Backend —Å PostgreSQL + pgvector extension

# –û–±—ã—á–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã ‚Üí Alembic –º–∏–≥—Ä–∞—Ü–∏–∏:
class User(Base):
    pass

class Course(Base):
    pass

# –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –≤–µ–∫—Ç–æ—Ä–∞–º–∏ ‚Üí Alembic + —Ä—É—á–Ω–æ–π SQL:
class Document(Base):
    embedding = Column(Vector(1536))  # pgvector type!

# –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è pgvector:
# alembic/versions/xxx_add_pgvector.py
def upgrade():
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pgvector extension
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")
    
    # –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å vector column
    op.create_table(
        'documents',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('content', sa.Text()),
        sa.Column('embedding', Vector(1536))  # Vector type!
    )
```

**–ö–æ–º–±–∏–Ω–∞—Ü–∏—è:**
- ‚úÖ Alembic –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
- ‚úÖ –†—É—á–Ω–æ–π SQL –≤ –º–∏–≥—Ä–∞—Ü–∏—è—Ö –¥–ª—è pgvector extension

---

## üîÑ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –º–∏–≥—Ä–∞—Ü–∏–π

### –¢–∏–ø–∏—á–Ω—ã–π workflow —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                  –ñ–ò–ó–ù–ï–ù–ù–´–ô –¶–ò–ö–õ –ú–ò–ì–†–ê–¶–ò–ô                        ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                 ‚îÇ
‚îÇ  1Ô∏è‚É£ –ò–ó–ú–ï–ù–ï–ù–ò–ï –ú–û–î–ï–õ–ò                                            ‚îÇ
‚îÇ     –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—è–µ—Ç SQLAlchemy –º–æ–¥–µ–ª—å                        ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ models/project.py                                       ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ + status = Column(String(50))  # –ù–æ–≤–æ–µ –ø–æ–ª–µ            ‚îÇ
‚îÇ                           ‚îÇ                                     ‚îÇ
‚îÇ                           ‚ñº                                     ‚îÇ
‚îÇ  2Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ò                                           ‚îÇ
‚îÇ     alembic revision --autogenerate                             ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ Alembic —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª–∏ —Å –ë–î                          ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –º–∏–≥—Ä–∞—Ü–∏–∏                                 ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ alembic/versions/xxx_add_status.py —Å–æ–∑–¥–∞–Ω              ‚îÇ
‚îÇ                           ‚îÇ                                     ‚îÇ
‚îÇ                           ‚ñº                                     ‚îÇ
‚îÇ  3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ú–ò–ì–†–ê–¶–ò–ò                                           ‚îÇ
‚îÇ     –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥                   ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ def upgrade(): ...  # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è               ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ def downgrade(): ... # –û—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è               ‚îÇ
‚îÇ                           ‚îÇ                                     ‚îÇ
‚îÇ                           ‚ñº                                     ‚îÇ
‚îÇ  4Ô∏è‚É£ –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –õ–û–ö–ê–õ–¨–ù–û                                         ‚îÇ
‚îÇ     alembic upgrade head                                        ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î                     ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ –¢–∞–±–ª–∏—Ü–∞ projects –æ–±–Ω–æ–≤–ª–µ–Ω–∞                              ‚îÇ
‚îÇ                           ‚îÇ                                     ‚îÇ
‚îÇ                           ‚ñº                                     ‚îÇ
‚îÇ  5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï                                                ‚îÇ
‚îÇ     pytest tests/                                               ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç                               ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ –¢–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç ‚úÖ                                        ‚îÇ
‚îÇ                           ‚îÇ                                     ‚îÇ
‚îÇ                           ‚ñº                                     ‚îÇ
‚îÇ  6Ô∏è‚É£ –ö–û–ú–ú–ò–¢ –í GIT                                                ‚îÇ
‚îÇ     git add alembic/versions/xxx_add_status.py                  ‚îÇ
‚îÇ     git commit -m "Add status field to projects"               ‚îÇ
‚îÇ                           ‚îÇ                                     ‚îÇ
‚îÇ                           ‚ñº                                     ‚îÇ
‚îÇ  7Ô∏è‚É£ DEPLOY –ù–ê PRODUCTION                                        ‚îÇ
‚îÇ     git push origin main                                        ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ CI/CD pipeline –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è                              ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ alembic upgrade head  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!                  ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ Production –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ                               ‚îÇ
‚îÇ                                                                 ‚îÇ
‚îÇ  üí° –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ ‚Üí alembic downgrade -1  # –û—Ç–∫–∞—Ç              ‚îÇ
‚îÇ                                                                 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

---

## üìö Alembic –æ—Å–Ω–æ–≤—ã

### –ß—Ç–æ —Ç–∞–∫–æ–µ Alembic?

**Alembic** - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è SQLAlchemy. –°–æ–∑–¥–∞–Ω —Ç–µ–º –∂–µ –∞–≤—Ç–æ—Ä–æ–º —á—Ç–æ –∏ SQLAlchemy.

**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
- ‚úÖ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–π (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª–∏ —Å –ë–î)
- ‚úÖ Version control (–∏—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π)
- ‚úÖ Upgrade / Downgrade (–ø—Ä–∏–º–µ–Ω–∏—Ç—å / –æ—Ç–∫–∞—Ç–∏—Ç—å)
- ‚úÖ Git-friendly (—Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏)

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Alembic

```bash
pip install alembic
```

### –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Alembic

```bash
# –í –ø–∞–ø–∫–µ backend/
alembic init alembic
```

**–°–æ–∑–¥–∞—ë—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:**
```
backend/
‚îú‚îÄ‚îÄ alembic/
‚îÇ   ‚îú‚îÄ‚îÄ versions/          # –ü–∞–ø–∫–∞ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ (–±—É–¥—É—Ç –∑–¥–µ—Å—å)
‚îÇ   ‚îú‚îÄ‚îÄ env.py             # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ script.py.mako     # –®–∞–±–ª–æ–Ω –º–∏–≥—Ä–∞—Ü–∏–∏
‚îÇ   ‚îî‚îÄ‚îÄ README
‚îú‚îÄ‚îÄ alembic.ini            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Alembic
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ database.py
‚îÇ   ‚îî‚îÄ‚îÄ models/
‚îî‚îÄ‚îÄ ...
```

---

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Alembic

#### –§–∞–π–ª: `alembic.ini`

```ini
# –£–∫–∞–∑—ã–≤–∞–µ–º URL –ë–î —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
sqlalchemy.url = driver://user:pass@localhost/dbname

# –ò–õ–ò –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–∑ .env (–ª—É—á—à–µ!)
# sqlalchemy.url = 
```

#### –§–∞–π–ª: `alembic/env.py`

```python
from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π
sys.path.insert(0, os.path.realpath(os.path.join(os.path.dirname(__file__), '..')))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Base –∏ –º–æ–¥–µ–ª–∏
from app.database import Base
from app.models import User, Project, Cam  # –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π!

# Alembic Config –æ–±—ä–µ–∫—Ç
config = context.config

# –ü–æ–ª—É—á–∞–µ–º DATABASE_URL –∏–∑ .env
from dotenv import load_dotenv
load_dotenv()
config.set_main_option("sqlalchemy.url", os.getenv("DATABASE_URL"))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º target_metadata –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
target_metadata = Base.metadata

def run_migrations_offline():
    """–ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ offline —Ä–µ–∂–∏–º–µ (–≥–µ–Ω–µ—Ä–∞—Ü–∏—è SQL)"""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online():
    """–ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ online —Ä–µ–∂–∏–º–µ (–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫ –ë–î)"""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata
        )

        with context.begin_transaction():
            context.run_migrations()

# –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º
if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
```

---

### –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏

```bash
# –°–æ–∑–¥–∞—Ç—å initial –º–∏–≥—Ä–∞—Ü–∏—é (—Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü)
alembic revision --autogenerate -m "Initial migration"

# Alembic:
# 1. –°–º–æ—Ç—Ä–∏—Ç –Ω–∞ –º–æ–¥–µ–ª–∏ –≤ app/models/
# 2. –°–º–æ—Ç—Ä–∏—Ç –Ω–∞ –ë–î (–ø–æ–∫–∞ –ø—É—Å—Ç–∞—è)
# 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é "—Å–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã"
```

**–°–æ–∑–¥–∞—ë—Ç—Å—è —Ñ–∞–π–ª:**
```
alembic/versions/abc123_initial_migration.py
```

**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:**
```python
"""Initial migration

Revision ID: abc123
Revises: 
Create Date: 2025-10-12 10:30:45.123456
"""
from alembic import op
import sqlalchemy as sa

# Revision identifiers
revision = 'abc123'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é (—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã)"""
    # –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É users
    op.create_table(
        'users',
        sa.Column('id', sa.String(255), primary_key=True),
        sa.Column('email', sa.String(255), nullable=False),
        sa.Column('subscription_status', sa.String(50)),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime())
    )
    
    # –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å –Ω–∞ email
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    
    # –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É projects
    op.create_table(
        'projects',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('user_id', sa.String(255), sa.ForeignKey('users.id')),
        sa.Column('name', sa.String(255), nullable=False),
        sa.Column('description', sa.Text()),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime())
    )
    
    # ... –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–ª—è cams

def downgrade():
    """–û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é (—É–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã)"""
    op.drop_table('cams')
    op.drop_table('projects')
    op.drop_table('users')
```

---

### –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏

```bash
# –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –Ω–µ–ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
alembic upgrade head

# –í—ã–≤–æ–¥:
INFO  [alembic.runtime.migration] Running upgrade  -> abc123, Initial migration
```

**–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:**
- ‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –ë–î
- ‚úÖ Alembic —Å–æ–∑–¥–∞–ª —Ç–∞–±–ª–∏—Ü—É `alembic_version` (—Ö—Ä–∞–Ω–∏—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é)
- ‚úÖ –í `alembic_version` –∑–∞–ø–∏—Å–∞–Ω–æ: `version = 'abc123'`

---

### –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –º–∏–≥—Ä–∞—Ü–∏–π

**–°—Ü–µ–Ω–∞—Ä–∏–π:** –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ `status` –≤ –º–æ–¥–µ–ª—å `Project`

```python
# app/models/project.py
class Project(Base):
    __tablename__ = "projects"
    
    id = Column(Integer, primary_key=True)
    user_id = Column(String(255), ForeignKey("users.id"))
    name = Column(String(255), nullable=False)
    description = Column(Text)
    status = Column(String(50), default="active")  # –ù–û–í–û–ï –ü–û–õ–ï!
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow)
```

**–°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é:**
```bash
alembic revision --autogenerate -m "Add status to projects"
```

**Alembic –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç:**
```python
# alembic/versions/def456_add_status_to_projects.py
def upgrade():
    """–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É status"""
    op.add_column('projects', sa.Column('status', sa.String(50)))

def downgrade():
    """–£–¥–∞–ª–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É status"""
    op.drop_column('projects', 'status')
```

**–ü—Ä–∏–º–µ–Ω–∏—Ç—å:**
```bash
alembic upgrade head
```

**–û—Ç–∫–∞—Ç–∏—Ç—å (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):**
```bash
alembic downgrade -1  # –û—Ç–∫–∞—Ç–∏—Ç—å –æ–¥–Ω—É –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞–∑–∞–¥
```

---

## ü§ñ –†–∞–±–æ—Ç–∞ —Å Claude Code

### –ó–∞–¥–∞—á–∞: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Alembic –¥–ª—è EngineCamPro v2

---

### ‚ùå –ü–ª–æ—Ö–æ–π –¥–∏–∞–ª–æ–≥ (–Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π)

```
–¢—ã: –ù–∞—Å—Ç—Ä–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞.

Claude Code: –ö–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? –ö–∞–∫–∞—è –ë–î?

–¢—ã: PostgreSQL.

Claude Code: Alembic? Django migrations? –ö–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç?

–¢—ã: –ù–µ –∑–Ω–∞—é. –í—ã–±–µ—Ä–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å.

Claude Code: [—Å–æ–∑–¥–∞—ë—Ç –±–∞–∑–æ–≤—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–æ–π—Ç–∏]
```

**–ü—Ä–æ–±–ª–µ–º—ã:**
- ‚ùå –ù–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞
- ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã –º–æ–¥–µ–ª–∏
- ‚ùå –ù–µ—è—Å–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î
- ‚ùå Claude Code –≤—ã–Ω—É–∂–¥–µ–Ω —É–≥–∞–¥—ã–≤–∞—Ç—å

---

### ‚úÖ –•–æ—Ä–æ—à–∏–π –¥–∏–∞–ª–æ–≥ (—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π)

```
–¢—ã: –ù–∞—Å—Ç—Ä–æ–π Alembic –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è EngineCamPro v2.

–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞:
- Backend: FastAPI (async SQLAlchemy)
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL (Supabase)
- ORM: SQLAlchemy 2.0+
- Python 3.11+
- –ú–æ–¥–µ–ª–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã –≤ app/models/

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
backend/
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ database.py
‚îÇ   ‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ user.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ project.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ cam.py
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ .env (DATABASE_URL –∑–¥–µ—Å—å)
‚îî‚îÄ‚îÄ ... (–∑–¥–µ—Å—å —Å–æ–∑–¥–∞—Ç—å alembic/)

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Alembic –≤ backend/
2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å alembic/env.py:
   - –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π –∏–∑ app.models
   - –ß—Ç–µ–Ω–∏–µ DATABASE_URL –∏–∑ .env
   - target_metadata = Base.metadata
3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å alembic.ini (—É–±—Ä–∞—Ç—å hardcoded URL)
4. –°–æ–∑–¥–∞—Ç—å initial –º–∏–≥—Ä–∞—Ü–∏—é (—Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü)
5. –î–æ–±–∞–≤–∏—Ç—å .gitignore –¥–ª—è __pycache__ –≤ alembic/

Best practices:
- Async SQLAlchemy compatible
- –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–π (--autogenerate)
- –ü–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
- Downgrade —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∫–∞—Ç–∞

Claude Code: –û—Ç–ª–∏—á–Ω–æ! –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Alembic:

1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞:
   ```bash
   pip install alembic python-dotenv
   ```

2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
   ```bash
   cd backend
   alembic init alembic
   ```

3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ alembic/env.py:
   - –î–æ–±–∞–≤–ª—é sys.path –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ app
   - –ò–º–ø–æ—Ä—Ç Base –∏ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
   - –ß—Ç–µ–Ω–∏–µ DATABASE_URL –∏–∑ .env
   - target_metadata = Base.metadata
   - run_migrations_online() –¥–ª—è async

4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ alembic.ini:
   - –£–±–µ—Ä—É hardcoded sqlalchemy.url
   - –ë—É–¥–µ–º —á–∏—Ç–∞—Ç—å –∏–∑ .env

5. –°–æ–∑–¥–∞–Ω–∏–µ initial –º–∏–≥—Ä–∞—Ü–∏–∏:
   ```bash
   alembic revision --autogenerate -m "Initial migration: create users, projects, cams"
   ```

6. .gitignore –æ–±–Ω–æ–≤–ª—é:
   ```
   alembic/versions/__pycache__/
   alembic/__pycache__/
   ```

–ü—Ä–∏–º–µ–Ω–∏—Ç—å? [Y/n]

–¢—ã: Y

Claude Code: ‚úÖ –ù–∞—Å—Ç—Ä–æ–∏–ª Alembic!

backend/alembic/env.py:
```python
import os
import sys
from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app
sys.path.insert(0, os.path.realpath(os.path.join(os.path.dirname(__file__), '..')))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Base –∏ –º–æ–¥–µ–ª–∏
from app.database import Base
from app.models import User, Project, Cam

# Alembic Config
config = context.config

# –ß–∏—Ç–∞–µ–º DATABASE_URL –∏–∑ .env
load_dotenv()
database_url = os.getenv("DATABASE_URL")
config.set_main_option("sqlalchemy.url", database_url)

# target_metadata –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
target_metadata = Base.metadata

# ... run_migrations_online() –∏ run_migrations_offline()
```

backend/alembic.ini:
```ini
[alembic]
script_location = alembic
prepend_sys_path = .
version_path_separator = os

# URL —á–∏—Ç–∞–µ—Ç—Å—è –∏–∑ .env –≤ env.py
# sqlalchemy.url =

[loggers]
keys = root,sqlalchemy,alembic
...
```

backend/.gitignore (–æ–±–Ω–æ–≤–ª—ë–Ω):
```
__pycache__/
*.pyc
.env
venv/
alembic/versions/__pycache__/
alembic/__pycache__/
```

–¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–º initial –º–∏–≥—Ä–∞—Ü–∏—é:
```bash
alembic revision --autogenerate -m "Initial migration: create users, projects, cams"
```

–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: alembic/versions/abc123_initial_migration.py

–ü—Ä–æ–≤–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:
```bash
cat alembic/versions/abc123_initial_migration.py
```

–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –∫ –ë–î? [Y/n]

–¢—ã: Y

Claude Code: –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é...
```bash
alembic upgrade head
```

INFO  [alembic.runtime.migration] Running upgrade  -> abc123, Initial migration

‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!

–ü—Ä–æ–≤–µ—Ä—å –≤ Supabase Dashboard:
- Table Editor ‚Üí –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–∞–±–ª–∏—Ü—ã: users, projects, cams, alembic_version

alembic_version —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é —Å—Ö–µ–º—ã: 'abc123'

–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π –ø—Ä–æ—Å—Ç–æ:
1. –ò–∑–º–µ–Ω–∏ –º–æ–¥–µ–ª—å –≤ app/models/
2. alembic revision --autogenerate -m "Description"
3. alembic upgrade head

–•–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é (–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ status)? [Y/n]

–¢—ã: –î–∞! –ü–æ–∫–∞–∂–∏ workflow –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã.

Claude Code: –û—Ç–ª–∏—á–Ω–æ! –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é –ø–æ–ª–Ω—ã–π workflow:

**–®–∞–≥ 1:** –ò–∑–º–µ–Ω—è—é –º–æ–¥–µ–ª—å Project

app/models/project.py:
```python
class Project(Base):
    # ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è
    status = Column(String(50), default="active")  # –ù–û–í–û–ï –ü–û–õ–ï!
```

**–®–∞–≥ 2:** –°–æ–∑–¥–∞—é –º–∏–≥—Ä–∞—Ü–∏—é
```bash
alembic revision --autogenerate -m "Add status field to projects"
```

–°–æ–∑–¥–∞–Ω: alembic/versions/def456_add_status_field_to_projects.py

**–®–∞–≥ 3:** –ü–æ–∫–∞–∑—ã–≤–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏

```python
"""Add status field to projects

Revision ID: def456
Revises: abc123
"""
from alembic import op
import sqlalchemy as sa

def upgrade():
    op.add_column('projects', sa.Column('status', sa.String(50), server_default='active'))

def downgrade():
    op.drop_column('projects', 'status')
```

**–®–∞–≥ 4:** –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é
```bash
alembic upgrade head
```

INFO  [alembic.runtime.migration] Running upgrade abc123 -> def456, Add status field to projects

‚úÖ –ü–æ–ª–µ status –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É projects!

–ü—Ä–æ–≤–µ—Ä—è—é –≤ –ë–î:
```sql
SELECT * FROM alembic_version;
-- version = 'def456'

DESCRIBE projects;
-- ... existing columns ...
-- status | character varying(50) | default 'active'
```

**–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å:**
```bash
alembic downgrade -1
```

INFO  [alembic.runtime.migration] Running downgrade def456 -> abc123

‚úÖ –ü–æ–ª–µ status —É–¥–∞–ª–µ–Ω–æ!

**Workflow –≤ –∫–æ–º–∞–Ω–¥–µ:**

1. Developer A:
   ```bash
   # –ò–∑–º–µ–Ω–∏–ª –º–æ–¥–µ–ª—å
   # –°–æ–∑–¥–∞–ª –º–∏–≥—Ä–∞—Ü–∏—é
   alembic revision --autogenerate -m "Add status"
   git add alembic/versions/def456_add_status.py
   git commit -m "Add project status field"
   git push
   ```

2. Developer B:
   ```bash
   git pull
   # –ü–æ–ª—É—á–∏–ª –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
   alembic upgrade head  # –ü—Ä–∏–º–µ–Ω–∏–ª –∫ —Å–≤–æ–µ–π –ë–î
   # –¢–µ–ø–µ—Ä—å —Å—Ö–µ–º–∞ –ë–î —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!
   ```

3. CI/CD (Production):
   ```yaml
   - name: Apply migrations
     run: alembic upgrade head
   ```

–í—Å—ë! –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç. üéâ
```

**–ü–æ—á–µ–º—É —ç—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ:**
- ‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞
- ‚úÖ –ß—ë—Ç–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
- ‚úÖ –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ (initial ‚Üí –∏–∑–º–µ–Ω–µ–Ω–∏–µ)
- ‚úÖ –ü–æ–∫–∞–∑–∞–Ω –ø–æ–ª–Ω—ã–π workflow (dev ‚Üí team ‚Üí CI/CD)
- ‚úÖ Claude Code —Å–æ–∑–¥–∞–ª –≤—Å—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–∏–≥—Ä–∞—Ü–∏–π

---

## üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

### –ó–∞–¥–∞—á–∞

–ù–∞—Å—Ç—Ä–æ–π Alembic –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è EngineCamPro v2 —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥ —Å Claude Code. –°–æ–∑–¥–∞–π initial –º–∏–≥—Ä–∞—Ü–∏—é –∏ –ø—Ä–∏–º–µ–Ω–∏ –µ—ë –∫ Supabase PostgreSQL.

---

### –†–∞–±–æ—Ç–∞ —Å Claude Code

**–®–∞–≥ 1:** –û—Ç–∫—Ä–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –ø–∞–ø–∫–µ backend

```bash
cd ~/projects/enginecampro-v2/backend
claude
```

---

**–®–∞–≥ 2:** –î–∏–∞–ª–æ–≥ —Å Claude Code

–°–∫–æ–ø–∏—Ä—É–π –¥–∏–∞–ª–æ–≥ –∏–∑ —Å–µ–∫—Ü–∏–∏ "‚úÖ –•–æ—Ä–æ—à–∏–π –¥–∏–∞–ª–æ–≥" –≤—ã—à–µ –∏ –æ–±—â–∞–π—Å—è —Å Claude Code. –û–Ω:
- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Alembic
- –ù–∞—Å—Ç—Ä–æ–∏—Ç `alembic/env.py`
- –û–±–Ω–æ–≤–∏—Ç `alembic.ini`
- –°–æ–∑–¥–∞—Å—Ç initial –º–∏–≥—Ä–∞—Ü–∏—é
- –ü—Ä–∏–º–µ–Ω–∏—Ç –º–∏–≥—Ä–∞—Ü–∏—é –∫ Supabase

---

**–®–∞–≥ 3:** –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

```bash
# –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞
alembic current

# –í—ã–≤–æ–¥:
abc123 (head)
```

**–í Supabase Dashboard:**
1. –ó–∞–π–¥–∏ –≤ Table Editor
2. –î–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–∞–±–ª–∏—Ü—ã: `users`, `projects`, `cams`, `alembic_version`
3. –û—Ç–∫—Ä–æ–π —Ç–∞–±–ª–∏—Ü—É `alembic_version` - –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–µ—Ä—Å–∏—è `abc123`

---

**–®–∞–≥ 4:** –°–æ–∑–¥–∞–π —Ç–µ—Å—Ç–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é

```bash
# –ü–æ–ø—Ä–æ—Å–∏ Claude Code –∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å Project (–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ status)
# –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞—Ç—å –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é

alembic revision --autogenerate -m "Add status to projects"
alembic upgrade head

# –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ –ø–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
```

---

## ‚ùì –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏

### 1. –û–±—ä—è—Å–Ω–∏ —á—Ç–æ —Ç–∞–∫–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–æ–≥–∏—é

–ü—Ä–∏–¥—É–º–∞–π —Å–≤–æ—é –∞–Ω–∞–ª–æ–≥–∏—é (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ Google Docs). –ù–∞–ø—Ä–∏–º–µ—Ä: –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–∞–∫...?

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–ü–æ–¥—É–º–∞–π –ø—Ä–æ:
- –í–µ—Ä—Å–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã (v1.0, v1.1, v2.0)
- –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
- –†–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã (–ø–æ—ç—Ç–∞–ø–Ω—ã–π)
- –≠–≤–æ–ª—é—Ü–∏—è –≤–∏–¥–∞
</details>

---

### 2. –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏? –ü–µ—Ä–µ—á–∏—Å–ª–∏ –º–∏–Ω–∏–º—É–º 5 –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤

1. _______
2. _______
3. _______
4. _______
5. _______

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–ü–æ–¥—É–º–∞–π –ø—Ä–æ:
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö (–Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å)
- –ö–æ–º–∞–Ω–¥–∞ (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)
- –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
- –û—Ç–∫–∞—Ç (rollback)
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è (CI/CD)
</details>

---

### 3. –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å SQLAlchemy –ë–ï–ó –º–∏–≥—Ä–∞—Ü–∏–∏?

–û–ø–∏—à–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π:
1. –£ —Ç–µ–±—è –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞ `projects` —Å 100 –∑–∞–ø–∏—Å—è–º–∏
2. –¢—ã –¥–æ–±–∞–≤–ª—è–µ—à—å –ø–æ–ª–µ `status` –≤ –º–æ–¥–µ–ª—å
3. –ß—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ `session.query(Project).all()`?

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–ü–æ–¥—É–º–∞–π –ø—Ä–æ:
- –ú–æ–¥–µ–ª—å –≤ –∫–æ–¥–µ vs —Å—Ö–µ–º–∞ –≤ –ë–î
- SQLAlchemy –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª–µ status
- PostgreSQL –Ω–µ –∑–Ω–∞–µ—Ç –ø—Ä–æ —ç—Ç–æ –ø–æ–ª–µ
- –ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç SELECT * FROM projects?
</details>

---

### 4. Alembic –∫–æ–º–∞–Ω–¥—ã - —á—Ç–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç?

–û–±—ä—è—Å–Ω–∏ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏:
- `alembic revision --autogenerate -m "Message"`
- `alembic upgrade head`
- `alembic downgrade -1`
- `alembic current`

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

revision - —Å–æ–∑–¥–∞–Ω–∏–µ
upgrade - –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
downgrade - –æ—Ç–∫–∞—Ç
current - —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è
</details>

---

### 5. Workflow –≤ –∫–æ–º–∞–Ω–¥–µ - –æ–ø–∏—à–∏ —à–∞–≥–∏

–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ A –¥–æ–±–∞–≤–∏–ª –ø–æ–ª–µ `description` –≤ –º–æ–¥–µ–ª—å `Cam`.
–ß—Ç–æ –¥–æ–ª–∂–Ω—ã —Å–¥–µ–ª–∞—Ç—å:
1. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ A
2. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ B (–∫–æ–ª–ª–µ–≥–∞)
3. CI/CD (–Ω–∞ production)

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

A: –°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é, –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –≤ Git
B: git pull, –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –ª–æ–∫–∞–ª—å–Ω–æ
CI/CD: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ production
</details>

---

## üîó –°–≤—è–∑—å —Å –¥—Ä—É–≥–∏–º–∏ —É—Ä–æ–∫–∞–º–∏

**–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —É—Ä–æ–∫–∞—Ö:**
- **–£—Ä–æ–∫ 3.2:** PostgreSQL –∏ SQLAlchemy ORM - —Å–æ–∑–¥–∞–ª–∏ –º–æ–¥–µ–ª–∏, —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ–º –∏–º–∏ —á–µ—Ä–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–∏
- **–ú–æ–¥—É–ª—å 2:** Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - FastAPI endpoints –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ö–µ–º—É –ë–î

**–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫ —É—Ä–æ–∫–∞–º:**
- **–£—Ä–æ–∫ 3.4:** Supabase - —É–∂–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫ Supabase PostgreSQL
- **–ú–æ–¥—É–ª—å 5:** –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ API –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å—Ö–µ–º—É –ë–î —á–µ—Ä–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–∏
- **–ú–æ–¥—É–ª—å 7:** Deploy - CI/CD –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏

**–°–≤—è–∑—å —Å EngineCamPro:**
- –≠—Ç–æ—Ç —É—Ä–æ–∫ —Å–æ–∑–¥–∞–ª **—Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –ë–î**
- –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ö–µ–º—É –ë–î
- –í production –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ CI/CD

**–°–≤—è–∑—å —Å Next.js (–ú–æ–¥—É–ª—å 8):**
- –í –ú–æ–¥—É–ª–µ 8 —É–≤–∏–¥–∏—à—å Prisma Migrate –¥–ª—è JavaScript/TypeScript
- –¢–∞ –∂–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–π, –Ω–æ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ ORM

**–°–≤—è–∑—å —Å RAG (–ú–æ–¥—É–ª—å 9):**
- –í –ú–æ–¥—É–ª–µ 9 —Å–æ–∑–¥–∞–¥–∏–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è pgvector extension —á–µ—Ä–µ–∑ Alembic

---

## ‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞

**–ü–æ–Ω–∏–º–∞–Ω–∏–µ (–º–æ–≥—É –æ–±—ä—è—Å–Ω–∏—Ç—å):**
- [ ] –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –∏ –∑–∞—á–µ–º –æ–Ω–∏ –Ω—É–∂–Ω—ã
- [ ] –ü—Ä–æ–±–ª–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã –ë–î –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π
- [ ] –ö–∞–∫ Alembic —Ä–∞–±–æ—Ç–∞–µ—Ç (autogenerate, upgrade, downgrade)
- [ ] Workflow –º–∏–≥—Ä–∞—Ü–∏–π –≤ –∫–æ–º–∞–Ω–¥–µ (Git + Alembic)
- [ ] –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É upgrade –∏ downgrade

**–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏:**
- [ ] –ù–∞—Å—Ç—Ä–æ–∏–ª Alembic —á–µ—Ä–µ–∑ Claude Code
- [ ] –°–æ–∑–¥–∞–ª initial –º–∏–≥—Ä–∞—Ü–∏—é (–≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã)
- [ ] –ü—Ä–∏–º–µ–Ω–∏–ª –º–∏–≥—Ä–∞—Ü–∏—é –∫ Supabase PostgreSQL
- [ ] –°–æ–∑–¥–∞–ª —Ç–µ—Å—Ç–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è)
- [ ] –£–º–µ—é –æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ (downgrade)

**–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É:**
- [ ] Alembic –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
- [ ] –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫ –ë–î
- [ ] –ü–æ–Ω–∏–º–∞—é –ø–æ–ª–Ω—ã–π lifecycle –º–∏–≥—Ä–∞—Ü–∏–π
- [ ] –ì–æ—Ç–æ–≤ –∏–∑—É—á–∞—Ç—å Supabase –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- [ ] –ó–∞–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤—ã–≤–æ–¥—ã –≤ `notes/module-3/lesson-3-3-notes.md`
- [ ] –û—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏
- [ ] –ó–∞–∫–æ–º–º–∏—Ç–∏–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Git

---

## üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã (–¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è)

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:

**–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:**
- [Alembic –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://alembic.sqlalchemy.org/) - –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
- [SQLAlchemy + Alembic tutorial](https://alembic.sqlalchemy.org/en/latest/tutorial.html) - –ø–æ—à–∞–≥–æ–≤—ã–π tutorial
- [Database Migrations Best Practices](https://www.prisma.io/dataguide/types/relational/migrations) - –æ–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã

**–°—Ç–∞—Ç—å–∏:**
- "Understanding Database Migrations" - –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
- "Alembic Auto-generate Limitations" - –∫–æ–≥–¥–∞ autogenerate –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç

**–í–∏–¥–µ–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):**
- "Database Migrations Explained" - –æ–±—â–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è
- "Alembic Tutorial for SQLAlchemy" - –¥–µ—Ç–∞–ª—å–Ω—ã–π –≥–∞–π–¥

**–ù–û!** –≠—Ç–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∫—É—Ä—Å–∞. –ì–ª–∞–≤–Ω–æ–µ - –ø–æ–Ω—è—Ç—å –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –º–∏–≥—Ä–∞—Ü–∏–π –∏ —É–º–µ—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Alembic —á–µ—Ä–µ–∑ Claude Code.

---

**–°—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞:** ‚è≥ –ù–µ –Ω–∞—á–∞—Ç  
**–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:** _________  
**–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:** _________  
**–í—Ä–µ–º—è –ø–æ—Ç—Ä–∞—á–µ–Ω–æ:** _______ –º–∏–Ω—É—Ç

---

## üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!

–¢—ã —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—à—å –∫–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–∏! –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è production –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.

**–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ (3.4)** –º—ã –∑–∞–≤–µ—Ä—à–∏–º –ú–æ–¥—É–ª—å 3 –∏–∑—É—á–µ–Ω–∏–µ–º Supabase - Backend-as-a-Service –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç PostgreSQL + Auth + Storage + Real-time –∏–∑ –∫–æ—Ä–æ–±–∫–∏.

**–ü–æ–º–Ω–∏:** –ú–∏–≥—Ä–∞—Ü–∏–∏ = Version Control –¥–ª—è –ë–î. Git –¥–ª—è –∫–æ–¥–∞, Alembic –¥–ª—è —Å—Ö–µ–º—ã! üöÄ
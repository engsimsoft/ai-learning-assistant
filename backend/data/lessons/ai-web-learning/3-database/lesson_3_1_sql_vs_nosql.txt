# –£—Ä–æ–∫ 3.1: SQL vs NoSQL - –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

> **–ú–æ–¥—É–ª—å 3:** –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö  
> **–£—Ä–æ–∫:** 3.1  
> **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** 45-60 –º–∏–Ω—É—Ç  
> **Prerequisite:** –ú–æ–¥—É–ª—å 2 (Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)

---

## üéØ –¶–µ–ª–∏ —É—Ä–æ–∫–∞

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ —Ç—ã —Å–º–æ–∂–µ—à—å:
- ‚úÖ –ü–æ–Ω–∏–º–∞—Ç—å —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É SQL –∏ NoSQL –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
- ‚úÖ –í—ã–±–∏—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –ë–î –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
- ‚úÖ –û–±—ä—è—Å–Ω–∏—Ç—å –ø–æ—á–µ–º—É EngineCamPro –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PostgreSQL (SQL)
- ‚úÖ –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–≥–¥–∞ Next.js –ø—Ä–æ–µ–∫—Ç –Ω—É–∂–µ–Ω NoSQL, –∞ –∫–æ–≥–¥–∞ SQL
- ‚úÖ –û–±–æ—Å–Ω–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä –ë–î —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥ —Å Claude Code

---

## üìñ –ö–æ–Ω—Ü–µ–ø—Ü–∏—è: SQL vs NoSQL

### –ü—Ä–æ—Å—Ç–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ

**SQL** (Structured Query Language) –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ö—Ä–∞–Ω—è—Ç –¥–∞–Ω–Ω—ã–µ –≤ **—Ç–∞–±–ª–∏—Ü–∞—Ö** —Å –∂—ë—Å—Ç–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, –∫–∞–∫ Excel —Ç–∞–±–ª–∏—Ü–∞. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ - —ç—Ç–æ –∑–∞–ø–∏—Å—å, –∫–∞–∂–¥–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —ç—Ç–æ –ø–æ–ª–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞. –¢–∞–±–ª–∏—Ü—ã —Å–≤—è–∑–∞–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π —á–µ—Ä–µ–∑ —Å–≤—è–∑–∏ (relationships).

**NoSQL** (Not Only SQL) –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ö—Ä–∞–Ω—è—Ç –¥–∞–Ω–Ω—ã–µ –≤ **–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö** (JSON-–ø–æ–¥–æ–±–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ö) –±–µ–∑ –∂—ë—Å—Ç–∫–æ–π —Å—Ö–µ–º—ã. –ö–∞–∫ –ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ - –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.

### –ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ

–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - —ç—Ç–æ —Å–µ—Ä–¥—Ü–µ –ª—é–±–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ë–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ë–î —Ç—ã –º–æ–∂–µ—à—å —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏:
- ‚ùå –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–≤—ã–±—Ä–∞–ª NoSQL, –∞ –Ω—É–∂–Ω—ã —Å–ª–æ–∂–Ω—ã–µ —Å–≤—è–∑–∏)
- ‚ùå –ò–∑–±—ã—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–≤—ã–±—Ä–∞–ª SQL, –∞ –¥–∞–Ω–Ω—ã–µ –≥–∏–±–∫–∏–µ)
- ‚ùå –°–ª–æ–∂–Ω–æ—Å—Ç—å –∫–æ–¥–∞ (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ë–î = –º–Ω–æ–≥–æ –∫–æ—Å—Ç—ã–ª–µ–π)

–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –ë–î = –±—ã—Å—Ç—Ä–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, —Ö–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –º–µ–Ω—å—à–µ –±–∞–≥–æ–≤.

---

## üè™ –ê–Ω–∞–ª–æ–≥–∏—è: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ vs –ö–æ—Ä–æ–±–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ

### SQL - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏

–ü—Ä–µ–¥—Å—Ç–∞–≤—å –±–æ–ª—å—à—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Å –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏:

```
üìö –ë–ò–ë–õ–ò–û–¢–ï–ö–ê (SQL)
‚îú‚îÄ‚îÄ –ö–ê–¢–ê–õ–û–ì –ö–ù–ò–ì (—Ç–∞–±–ª–∏—Ü–∞ "books")
‚îÇ   ‚îú‚îÄ‚îÄ ID | –ù–∞–∑–≤–∞–Ω–∏–µ | –ê–≤—Ç–æ—Ä ID | –ì–æ–¥
‚îÇ   ‚îú‚îÄ‚îÄ 1  | "1984"   | 5        | 1949
‚îÇ   ‚îî‚îÄ‚îÄ 2  | "–§–∞—É—Å—Ç"  | 12       | 1808
‚îÇ
‚îú‚îÄ‚îÄ –ö–ê–¢–ê–õ–û–ì –ê–í–¢–û–†–û–í (—Ç–∞–±–ª–∏—Ü–∞ "authors")
‚îÇ   ‚îú‚îÄ‚îÄ ID | –ò–º—è            | –°—Ç—Ä–∞–Ω–∞
‚îÇ   ‚îú‚îÄ‚îÄ 5  | George Orwell  | UK
‚îÇ   ‚îî‚îÄ‚îÄ 12 | Goethe         | Germany
‚îÇ
‚îî‚îÄ‚îÄ –°–í–Ø–ó–ò: –ö–Ω–∏–≥–∞ ‚Üí –ê–≤—Ç–æ—Ä (—á–µ—Ä–µ–∑ Author ID)
```

**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
- ‚úÖ –°—Ç—Ä–æ–≥–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è (—É –∫–∞–∂–¥–æ–π –∫–Ω–∏–≥–∏ –µ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ—Ä, –≥–æ–¥)
- ‚úÖ –°–≤—è–∑–∏ –º–µ–∂–¥—É –¥–∞–Ω–Ω—ã–º–∏ (–∫–Ω–∏–≥–∞ –ü–†–ò–ù–ê–î–õ–ï–ñ–ò–¢ –∞–≤—Ç–æ—Ä—É)
- ‚úÖ –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ —Å–≤—è–∑—è–º ("–≤—Å–µ –∫–Ω–∏–≥–∏ –∞–≤—Ç–æ—Ä–∞ X")
- ‚ö†Ô∏è –°–ª–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–æ–ª–µ (–Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å –∫–∞—Ç–∞–ª–æ–≥)

### NoSQL - –ö–æ—Ä–æ–±–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ

–ü—Ä–µ–¥—Å—Ç–∞–≤—å —Å–∫–ª–∞–¥ —Å –∫–æ—Ä–æ–±–∫–∞–º–∏:

```
üì¶ –°–ö–õ–ê–î (NoSQL)
‚îú‚îÄ‚îÄ –ö–æ—Ä–æ–±–∫–∞ #1 (–¥–æ–∫—É–º–µ–Ω—Ç)
‚îÇ   {
‚îÇ     "name": "1984",
‚îÇ     "author": {"name": "George Orwell", "country": "UK"},
‚îÇ     "year": 1949,
‚îÇ     "awards": ["Prometheus Award"]
‚îÇ   }
‚îÇ
‚îú‚îÄ‚îÄ –ö–æ—Ä–æ–±–∫–∞ #2 (–¥–æ–∫—É–º–µ–Ω—Ç)
‚îÇ   {
‚îÇ     "title": "–§–∞—É—Å—Ç",  ‚Üê –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è!
‚îÇ     "writer": "Goethe",
‚îÇ     "notes": "–ö–ª–∞—Å—Å–∏–∫–∞",
‚îÇ     "extra_field": "—á—Ç–æ —É–≥–æ–¥–Ω–æ"  ‚Üê –Ω–æ–≤–æ–≥–æ –ø–æ–ª—è –Ω–µ—Ç –≤ #1
‚îÇ   }
‚îÇ
‚îî‚îÄ‚îÄ –ö–∞–∂–¥–∞—è –∫–æ—Ä–æ–±–∫–∞ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –°–í–û–Æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
```

**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
- ‚úÖ –ì–∏–±–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–∫–∞–∂–¥—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è)
- ‚úÖ –õ–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ª—è (–ø—Ä–æ—Å—Ç–æ –ø–æ–ª–æ–∂–∏ –≤ –∫–æ—Ä–æ–±–∫—É)
- ‚úÖ –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –æ–¥–Ω–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—É
- ‚ö†Ô∏è –°–ª–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Å–≤—è–∑–∏ –º–µ–∂–¥—É –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
- ‚ö†Ô∏è –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

---

## üí° –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è (–ö–†–ò–¢–ò–ß–ù–û!)

### –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

**‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è:**

1. **–î–∞–Ω–Ω—ã–µ —Å–æ —Å–≤—è–∑—è–º–∏ (relationships)**
   - Users ‚Üí Projects ‚Üí Cams (–∫–∞–∫ –≤ EngineCamPro)
   - Orders ‚Üí Products ‚Üí Categories
   - Students ‚Üí Courses ‚Üí Enrollments

2. **–ù—É–∂–Ω–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö (data integrity)**
   - –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   - E-commerce (–∑–∞–∫–∞–∑—ã, –æ–ø–ª–∞—Ç–∞)
   - CRM —Å–∏—Å—Ç–µ–º—ã

3. **–°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (complex queries)**
   - "–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è X –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥"
   - "–ö—É–ª–∞—á–∫–∏ —Å lift > 10mm –≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö"
   - JOIN –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü

4. **–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (ACID)**
   - –ü–ª–∞—Ç–µ–∂–∏ (—Å–ø–∏—Å–∞–ª–∏ –¥–µ–Ω—å–≥–∏ ‚Üí –∑–∞—á–∏—Å–ª–∏–ª–∏ —Ç–æ–≤–∞—Ä)
   - –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

**–ü—Ä–∏–º–µ—Ä—ã SQL –±–∞–∑:**
- **PostgreSQL** ‚≠ê (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è) - –º–æ—â–Ω—ã–π, –æ—Ç–∫—Ä—ã—Ç—ã–π, –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π
- **MySQL** - –ø–æ–ø—É–ª—è—Ä–Ω—ã–π, –Ω–æ –º–µ–Ω–µ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π
- **SQLite** - –ø—Ä–æ—Å—Ç–æ–π, –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

---

### –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å NoSQL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

**‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è:**

1. **–ì–∏–±–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö**
   - –ë–ª–æ–≥–∏ (–ø–æ—Å—Ç—ã –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è)
   - –õ–æ–≥–∏ –∏ —Å–æ–±—ã—Ç–∏—è
   - User-generated content

2. **–ü—Ä–æ—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ —Å–≤—è–∑–µ–π**
   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   - –ö—ç—à –¥–∞–Ω–Ω—ã—Ö
   - –°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

3. **–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ**
   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â—ë –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
   - MVP –ø—Ä–æ–µ–∫—Ç
   - Hackathon –ø—Ä–æ–µ–∫—Ç

4. **–ë–æ–ª—å—à–∏–µ –æ–±—ä—ë–º—ã –¥–∞–Ω–Ω—ã—Ö (Big Data)**
   - IoT sensors (–º–∏–ª–ª–∏–æ–Ω—ã –∑–∞–ø–∏—Å–µ–π)
   - Real-time –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
   - –î–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç

**–ü—Ä–∏–º–µ—Ä—ã NoSQL –±–∞–∑:**
- **MongoDB** - document-based, –ø–æ–ø—É–ª—è—Ä–Ω–∞—è
- **Firebase Firestore** - real-time, –æ—Ç Google
- **Redis** - in-memory, –¥–ª—è –∫—ç—à–∞
- **DynamoDB** - –æ—Ç AWS, serverless

---

## üîÑ SQL vs NoSQL - –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ

| –ê—Å–ø–µ–∫—Ç | SQL (PostgreSQL) | NoSQL (MongoDB) |
|--------|------------------|-----------------|
| **–°—Ç—Ä—É–∫—Ç—É—Ä–∞** | –¢–∞–±–ª–∏—Ü—ã, —Å—Ç—Ä–æ–≥–∞—è —Å—Ö–µ–º–∞ | –î–æ–∫—É–º–µ–Ω—Ç—ã, –≥–∏–±–∫–∞—è —Å—Ö–µ–º–∞ |
| **–°–≤—è–∑–∏ (Relationships)** | ‚úÖ –û—Ç–ª–∏—á–Ω–æ (Foreign Keys) | ‚ö†Ô∏è –°–ª–æ–∂–Ω–æ, –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ |
| **–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö** | ‚úÖ ACID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ | ‚ö†Ô∏è Eventual consistency |
| **–°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã** | ‚úÖ SQL —è–∑—ã–∫, JOINs | ‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω—ã |
| **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å** | ‚ö†Ô∏è –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è (–±–æ–ª—å—à–µ RAM/CPU) | ‚úÖ –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è (–±–æ–ª—å—à–µ —Å–µ—Ä–≤–µ—Ä–æ–≤) |
| **–ì–∏–±–∫–æ—Å—Ç—å —Å—Ö–µ–º—ã** | ‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω—ã | ‚úÖ –õ–µ–≥–∫–æ –º–µ–Ω—è—Ç—å |
| **–°–∫–æ—Ä–æ—Å—Ç—å (–ø—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã)** | ‚úÖ –ë—ã—Å—Ç—Ä–æ | ‚úÖ –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ |
| **–°–∫–æ—Ä–æ—Å—Ç—å (—Å–≤—è–∑–∏)** | ‚úÖ –ë—ã—Å—Ç—Ä–æ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ | ‚ùå –ú–µ–¥–ª–µ–Ω–Ω–æ |
| **–î–ª—è EngineCamPro v2** | ‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ | ‚ùå –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç |
| **–î–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±–ª–æ–≥–∞ (Next.js)** | ‚ö†Ô∏è –ò–∑–ª–∏—à–Ω–µ | ‚úÖ –û—Ç–ª–∏—á–Ω–æ |
| **–î–ª—è –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—ã (RAG)** | ‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç | ‚úÖ –¢–æ–∂–µ –ø–æ–¥—Ö–æ–¥–∏—Ç |

---

## üîß –¢—Ä–∏ —Ç–∏–ø–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∫—É—Ä—Å–∞ - –≤—ã–±–æ—Ä –ë–î

### 1. EngineCamPro v2 (FastAPI + React)

**–í—ã–±–æ—Ä: PostgreSQL** ‚úÖ

**–ü–æ—á–µ–º—É SQL:**
```
Users (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
  ‚Üì
Projects (–ø—Ä–æ–µ–∫—Ç—ã –∫—É–ª–∞—á–∫–æ–≤)
  ‚Üì
Cams (–∫—É–ª–∞—á–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ)

- –ß—ë—Ç–∫–∏–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å—É—â–Ω–æ—Å—Ç—è–º–∏
- User –í–õ–ê–î–ï–ï–¢ Projects
- Project –°–û–î–ï–†–ñ–ò–¢ Cams
- –ù—É–∂–Ω—ã —Å–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: "–≤—Å–µ –∫—É–ª–∞—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è X"
- –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö (–Ω–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏)
```

**–°—Ö–µ–º–∞ –≤ PostgreSQL:**
```sql
-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
CREATE TABLE users (
    id VARCHAR(255) PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    subscription_status VARCHAR(50)
);

-- –ü—Ä–æ–µ–∫—Ç—ã (–ü–†–ò–ù–ê–î–õ–ï–ñ–ê–¢ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
CREATE TABLE projects (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(255) REFERENCES users(id),  ‚Üê —Å–≤—è–∑—å!
    name VARCHAR(255) NOT NULL
);

-- –ö—É–ª–∞—á–∫–∏ (–ü–†–ò–ù–ê–î–õ–ï–ñ–ê–¢ –ø—Ä–æ–µ–∫—Ç—É)
CREATE TABLE cams (
    id SERIAL PRIMARY KEY,
    project_id INTEGER REFERENCES projects(id),  ‚Üê —Å–≤—è–∑—å!
    name VARCHAR(255) NOT NULL,
    lift DECIMAL(5,2),
    duration INTEGER
);
```

**–ó–∞–ø—Ä–æ—Å—ã:**
```sql
-- "–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å email='user@example.com'"
SELECT p.* FROM projects p
JOIN users u ON p.user_id = u.id
WHERE u.email = 'user@example.com';

-- "–í—Å–µ –∫—É–ª–∞—á–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ 'Engine V8'"
SELECT c.* FROM cams c
JOIN projects p ON c.project_id = p.id
WHERE p.name = 'Engine V8';
```

**NoSQL –∑–¥–µ—Å—å –ø–ª–æ—Ö–æ:**
- ‚ùå –ü—Ä–∏—à–ª–æ—Å—å –±—ã –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å user info –≤ –∫–∞–∂–¥–æ–º project
- ‚ùå –°–ª–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å JOIN "–≤—Å–µ –∫—É–ª–∞—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
- ‚ùå –ù–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–π —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö

---

### 2. –ë—ã—Å—Ç—Ä—ã–µ Full-Stack –ø—Ä–æ–µ–∫—Ç—ã (Next.js)

**–í—ã–±–æ—Ä: –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á–∏** ‚ö†Ô∏è

**–ü—Ä–æ—Å—Ç–æ–π –±–ª–æ–≥ ‚Üí MongoDB/Firestore** ‚úÖ
```javascript
// –î–æ–∫—É–º–µ–Ω—Ç "Post" –≤ MongoDB
{
  _id: "post123",
  title: "My Blog Post",
  content: "Long text...",
  author: {  ‚Üê –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç, –Ω–µ —Å–≤—è–∑—å!
    name: "John",
    avatar: "avatar.jpg"
  },
  tags: ["tech", "ai"],
  published: true,
  createdAt: "2025-10-11"
}

// –õ–µ–≥–∫–æ –º–µ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
{
  _id: "post124",
  title: "Another Post",
  content: "Text...",
  author: {...},
  tags: [...],
  views: 1000,  ‚Üê –Ω–æ–≤–æ–µ –ø–æ–ª–µ!
  featured: true  ‚Üê –µ—â—ë –æ–¥–Ω–æ –Ω–æ–≤–æ–µ –ø–æ–ª–µ!
}
```

**E-commerce ‚Üí PostgreSQL** ‚úÖ
```
Users ‚Üí Orders ‚Üí Order_Items ‚Üí Products

- –°–≤—è–∑–∏ –º–µ–∂–¥—É —Å—É—â–Ω–æ—Å—Ç—è–º–∏
- –ù—É–∂–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–æ–ø–ª–∞—Ç–∞ = —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞)
- –°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: "–≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –º–µ—Å—è—Ü"
```

---

### 3. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ (RAG + AI)

**–í—ã–±–æ—Ä: –ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥** üîÑ

**PostgreSQL –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:**
- Users, Courses, Enrollments (—Å–≤—è–∑–∏)
- Chat history (–¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏)
- User progress tracking

**Vector DB (—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è NoSQL) –¥–ª—è RAG:**
- **pgvector** (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ PostgreSQL) ‚≠ê —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
- –ò–ª–∏ **Pinecone/Weaviate** (–æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã)
- –•—Ä–∞–Ω–µ–Ω–∏–µ embeddings —É—á–µ–±–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- Semantic search –¥–ª—è AI Assistant

```sql
-- PostgreSQL + pgvector
CREATE TABLE documents (
    id SERIAL PRIMARY KEY,
    course_id INTEGER REFERENCES courses(id),
    content TEXT,
    embedding vector(1536)  ‚Üê vector column!
);

-- Semantic search
SELECT content FROM documents
ORDER BY embedding <=> query_embedding  ‚Üê cosine distance
LIMIT 5;
```

---

## üåê –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏

### SQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (PostgreSQL)

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ              –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –° SQL –ë–î                      ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                           ‚îÇ
‚îÇ  üíª FRONTEND              üîå API              üóÑÔ∏è DATABASE ‚îÇ
‚îÇ                                                           ‚îÇ
‚îÇ  React                   FastAPI             PostgreSQL   ‚îÇ
‚îÇ                                                           ‚îÇ
‚îÇ  [User clicks            [Endpoint           [Tables:]    ‚îÇ
‚îÇ   "My Projects"]          /api/projects]                  ‚îÇ
‚îÇ         ‚îÇ                      ‚îÇ              users        ‚îÇ
‚îÇ         ‚îÇ  GET /api/projects   ‚îÇ              projects    ‚îÇ
‚îÇ         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ              cams        ‚îÇ
‚îÇ                                ‚îÇ                          ‚îÇ
‚îÇ                    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê               ‚îÇ
‚îÇ                    ‚îÇ   SQLAlchemy ORM     ‚îÇ               ‚îÇ
‚îÇ                    ‚îÇ   (–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫)       ‚îÇ               ‚îÇ
‚îÇ                    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò               ‚îÇ
‚îÇ                                ‚îÇ                          ‚îÇ
‚îÇ                                ‚îÇ SQL Query:               ‚îÇ
‚îÇ                                ‚îÇ SELECT * FROM projects   ‚îÇ
‚îÇ                                ‚îÇ WHERE user_id = 'user123'‚îÇ
‚îÇ                                ‚ñº                          ‚îÇ
‚îÇ                        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                  ‚îÇ
‚îÇ                        ‚îÇ  PostgreSQL   ‚îÇ                  ‚îÇ
‚îÇ                        ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ                  ‚îÇ
‚îÇ                        ‚îÇ  ‚îÇ projects ‚îÇ ‚îÇ                  ‚îÇ
‚îÇ         JSON           ‚îÇ  ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§ ‚îÇ                  ‚îÇ
‚îÇ    ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÇ id  name ‚îÇ ‚îÇ                  ‚îÇ
‚îÇ    [{id:1,name:"V8"}]  ‚îÇ  ‚îÇ 1   V8   ‚îÇ ‚îÇ                  ‚îÇ
‚îÇ                        ‚îÇ  ‚îÇ 2   V6   ‚îÇ ‚îÇ                  ‚îÇ
‚îÇ                        ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ                  ‚îÇ
‚îÇ                        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                  ‚îÇ
‚îÇ                                                           ‚îÇ
‚îÇ  [Display projects]                                       ‚îÇ
‚îÇ                                                           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

### NoSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (MongoDB)

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ             –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–ï –° NoSQL –ë–î                     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                           ‚îÇ
‚îÇ  üíª FRONTEND              üîå API            üì¶ DATABASE    ‚îÇ
‚îÇ                                                           ‚îÇ
‚îÇ  Next.js                 Server Actions   MongoDB         ‚îÇ
‚îÇ                                                           ‚îÇ
‚îÇ  [User clicks            [Server Action]  [Documents:]    ‚îÇ
‚îÇ   "Blog Posts"]                                           ‚îÇ
‚îÇ         ‚îÇ                      ‚îÇ           {id:1,         ‚îÇ
‚îÇ         ‚îÇ  Call getPost()      ‚îÇ            title:"...",  ‚îÇ
‚îÇ         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ            content:"..." ‚îÇ
‚îÇ                                ‚îÇ           }              ‚îÇ
‚îÇ                    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê               ‚îÇ
‚îÇ                    ‚îÇ   MongoDB Driver     ‚îÇ               ‚îÇ
‚îÇ                    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò               ‚îÇ
‚îÇ                                ‚îÇ                          ‚îÇ
‚îÇ                                ‚îÇ db.posts.find({})        ‚îÇ
‚îÇ                                ‚ñº                          ‚îÇ
‚îÇ                        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                  ‚îÇ
‚îÇ                        ‚îÇ   MongoDB     ‚îÇ                  ‚îÇ
‚îÇ                        ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îÇ                  ‚îÇ
‚îÇ         JSON           ‚îÇ  ‚îÇ Document ‚îÇ ‚îÇ                  ‚îÇ
‚îÇ    ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÇ  (JSON)  ‚îÇ ‚îÇ                  ‚îÇ
‚îÇ    [{...}, {...}]      ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îÇ                  ‚îÇ
‚îÇ                        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                  ‚îÇ
‚îÇ                                                           ‚îÇ
‚îÇ  [Display posts]                                          ‚îÇ
‚îÇ                                                           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

**–ö–ª—é—á–µ–≤–∞—è —Ä–∞–∑–Ω–∏—Ü–∞:**
- **SQL:** –ù—É–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ (ORM) Python ‚Üî SQL
- **NoSQL:** –ü—Ä—è–º–∞—è —Ä–∞–±–æ—Ç–∞ —Å JSON (JavaScript objects)

---

## ü§ñ –†–∞–±–æ—Ç–∞ —Å Claude Code

### –ó–∞–¥–∞—á–∞: –í—ã–±—Ä–∞—Ç—å –ë–î –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –í–æ—Ç –∫–∞–∫ —Ç—ã –æ–±—â–∞–µ—à—å—Å—è —Å Claude Code –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è.

---

### ‚ùå –ü–ª–æ—Ö–æ–π –¥–∏–∞–ª–æ–≥ (–Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π)

```
–¢—ã: –°–æ–∑–¥–∞–π –º–Ω–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞.

Claude Code: –ö–∞–∫–æ–π —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞? –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥–µ—à—å —Ö—Ä–∞–Ω–∏—Ç—å?

–¢—ã: –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.

Claude Code: SQL –∏–ª–∏ NoSQL? –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö.

–¢—ã: –ù–µ –∑–Ω–∞—é. –í—ã–±–µ—Ä–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å.

Claude Code: [–≤—ã–Ω—É–∂–¥–µ–Ω —É–≥–∞–¥—ã–≤–∞—Ç—å, –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ]
```

**–ü—Ä–æ–±–ª–µ–º—ã:**
- ‚ùå –ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
- ‚ùå –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–≤—è–∑—è—Ö
- ‚ùå –ò–ò –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- ‚ùå –ú–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â—É—é –ë–î

---

### ‚úÖ –•–æ—Ä–æ—à–∏–π –¥–∏–∞–ª–æ–≥ (—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π)

```
–¢—ã: –ü–æ–º–æ–≥–∏ –≤—ã–±—Ä–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ EngineCamPro v2.

–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:
- Backend: FastAPI –¥–ª—è —Ä–∞—Å—á—ë—Ç–æ–≤ –∫—É–ª–∞—á–∫–æ–≤
- –ù—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å: Users, Projects, Cams (–∫—É–ª–∞—á–∫–∏)
- –°–≤—è–∑–∏: User ‚Üí Projects ‚Üí Cams (1:many)
- –ó–∞–ø—Ä–æ—Å—ã: "–≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–∫—É–ª–∞—á–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ"
- –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è: Stripe subscriptions (—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)
- Python backend (FastAPI)

–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π hosting (Supabase)
- –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤–∞–∂–Ω–∞
- –ù—É–∂–Ω—ã —Å–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å JOIN
- Python ORM (SQLAlchemy)

–ö–∞–∫—É—é –ë–î —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å: SQL –∏–ª–∏ NoSQL? –û–±–æ—Å–Ω—É–π –≤—ã–±–æ—Ä.

Claude Code: –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π, –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ **PostgreSQL** (SQL –±–∞–∑–∞).

–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:
‚úÖ –ß—ë—Ç–∫–∏–µ —Å–≤—è–∑–∏: User ‚Üí Projects ‚Üí Cams (–æ—Ç–ª–∏—á–Ω–æ –¥–ª—è SQL)
‚úÖ –°–ª–æ–∂–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Å JOIN (—Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ SQL)
‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö (ACID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π)
‚úÖ SQLAlchemy ORM –¥–ª—è Python (–æ—Ç–ª–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è)
‚úÖ Supabase –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç PostgreSQL (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π tier)

NoSQL (MongoDB) –∑–¥–µ—Å—å –ø–ª–æ—Ö–æ:
‚ùå –ü—Ä–∏—à–ª–æ—Å—å –±—ã –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å user info –≤ –∫–∞–∂–¥–æ–º project
‚ùå –°–ª–æ–∂–Ω—ã–µ JOIN'—ã —á–µ—Ä–µ–∑ application code (–º–µ–¥–ª–µ–Ω–Ω–æ)
‚ùå –ù–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–π —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π

–°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ —Å PostgreSQL + SQLAlchemy? [Y/n]

–¢—ã: –î–∞! –°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞:

backend/
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ database.py (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL)
‚îÇ   ‚îú‚îÄ‚îÄ models/ (SQLAlchemy –º–æ–¥–µ–ª–∏)
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ user.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ project.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ cam.py
‚îÇ   ‚îî‚îÄ‚îÄ schemas/ (Pydantic —Å—Ö–µ–º—ã)

–ò—Å–ø–æ–ª—å–∑—É–π:
- SQLAlchemy 2.0+ (async)
- Pydantic –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- Best practices –¥–ª—è –º–æ–¥–µ–ª–µ–π
- Foreign Keys –¥–ª—è —Å–≤—è–∑–µ–π
- Indexes –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

Claude Code: –û—Ç–ª–∏—á–Ω–æ! –ü–ª–∞–Ω:

1. –°–æ–∑–¥–∞–º database.py —Å async engine –∏ session
2. –°–æ–∑–¥–∞–º SQLAlchemy –º–æ–¥–µ–ª–∏ —Å relationships
3. –°–æ–∑–¥–∞–º Pydantic —Å—Ö–µ–º—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
4. –î–æ–±–∞–≤–ª—é –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Alembic (–ø–æ–∑–∂–µ)

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥–µ–ª–µ–π:
- User (id, email, subscription_status)
- Project (id, user_id FK, name, description)
- Cam (id, project_id FK, name, lift, duration, ...)

Relationships:
- User.projects (one-to-many)
- Project.cams (one-to-many)
- Cascade delete (—É–¥–∞–ª–∏–ª –ø—Ä–æ–µ–∫—Ç ‚Üí —É–¥–∞–ª–∏–ª–∏—Å—å cams)

–ü—Ä–∏–º–µ–Ω–∏—Ç—å? [Y/n]

–¢—ã: Y

Claude Code: ‚úÖ –°–æ–∑–¥–∞–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—É:

backend/app/database.py:
- Async SQLAlchemy engine
- Session factory
- Base class –¥–ª—è –º–æ–¥–µ–ª–µ–π

backend/app/models/user.py:
- User –º–æ–¥–µ–ª—å —Å relationships
- subscription_status field

backend/app/models/project.py:
- Project –º–æ–¥–µ–ª—å
- FK –Ω–∞ users
- Relationship –Ω–∞ cams

backend/app/models/cam.py:
- Cam –º–æ–¥–µ–ª—å
- FK –Ω–∞ projects
- –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫—É–ª–∞—á–∫–∞

backend/app/schemas/:
- Pydantic —Å—Ö–µ–º—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- Request/Response –º–æ–¥–µ–ª–∏

–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase PostgreSQL?

–¢—ã: –î–∞, –Ω–∞—Å—Ç—Ä–æ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase.

Claude Code: –ù—É–∂–µ–Ω DATABASE_URL –æ—Ç Supabase.

–ì–¥–µ –≤–∑—è—Ç—å:
1. –ó–∞–π–¥–∏ –Ω–∞ supabase.com
2. –°–æ–∑–¥–∞–π –ø—Ä–æ–µ–∫—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π tier)
3. Settings ‚Üí Database ‚Üí Connection String
4. –°–∫–æ–ø–∏—Ä—É–π DATABASE_URL

–ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–π .env —Ñ–∞–π–ª:
DATABASE_URL=postgresql://user:password@host:5432/dbname

–°–æ–∑–¥–∞—Ç—å .env.example –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é? [Y/n]

–¢—ã: Y

Claude Code: ‚úÖ –°–æ–∑–¥–∞–ª:

.env.example:
DATABASE_URL=postgresql://user:password@host:5432/dbname

README.md —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏:
- –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å Supabase –ø—Ä–æ–µ–∫—Ç
- –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å DATABASE_URL
- –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É

docs/database-setup.md:
- –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
- –°–∫—Ä–∏–Ω—à–æ—Ç—ã (—Å—Å—ã–ª–∫–∏)
- Troubleshooting

–ì–æ—Ç–æ–≤–æ! –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î?
```

**–ü–æ—á–µ–º—É —ç—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ:**
- ‚úÖ –ß—ë—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –¥–∞–Ω–Ω—ã—Ö
- ‚úÖ –£–∫–∞–∑–∞–Ω—ã —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å—É—â–Ω–æ—Å—Ç—è–º–∏
- ‚úÖ –û–±–æ—Å–Ω–æ–≤–∞–Ω –≤—ã–±–æ—Ä –ë–î (SQL vs NoSQL)
- ‚úÖ Claude Code —Å–æ–∑–¥–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
- ‚úÖ –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ Supabase setup)

---

### –ü—Ä–∏–º–µ—Ä 2: –í—ã–±–æ—Ä –ë–î –¥–ª—è –±–ª–æ–≥–∞ (Next.js)

```
–¢—ã: –î–µ–ª–∞—é –ø—Ä–æ—Å—Ç–æ–π –±–ª–æ–≥ –Ω–∞ Next.js. –ü–æ–º–æ–≥–∏ –≤—ã–±—Ä–∞—Ç—å –ë–î.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –•—Ä–∞–Ω–∏—Ç—å: blog posts, comments
- –°–≤—è–∑–∏: Post ‚Üí Comments (–Ω–æ –ø—Ä–æ—Å—Ç—ã–µ, –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ)
- –ì–∏–±–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –ø–æ—Å—Ç—ã –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å –≤–∏–¥–µ–æ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ—Ç)
- MVP –ø—Ä–æ–µ–∫—Ç, –±—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
- Next.js 15 App Router
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π hosting (Vercel)

–ö–∞–∫—É—é –ë–î –≤—ã–±—Ä–∞—Ç—å?

Claude Code: –î–ª—è —Ç–≤–æ–µ–≥–æ —Å–ª—É—á–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é **MongoDB** (NoSQL) –∏–ª–∏ **Firebase Firestore**.

–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:
‚úÖ –ì–∏–±–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (Post –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—è)
‚úÖ –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–Ω–µ –Ω—É–∂–Ω—ã —Å–ª–æ–∂–Ω—ã–µ JOIN'—ã)
‚úÖ –ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ (–Ω–µ –Ω—É–∂–Ω—ã –º–∏–≥—Ä–∞—Ü–∏–∏)
‚úÖ JavaScript –≤–µ–∑–¥–µ (Next.js + MongoDB Driver = –æ–¥–∏–Ω —è–∑—ã–∫)
‚úÖ MongoDB Atlas –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π tier (512MB)

–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:
- **Firestore** (–æ—Ç Google): Real-time updates, —Ö–æ—Ä–æ—à–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Next.js
- **Supabase PostgreSQL**: –ï—Å–ª–∏ —Ö–æ—á–µ—à—å SQL, –Ω–æ —ç—Ç–æ –∏–∑–ª–∏—à–Ω–µ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±–ª–æ–≥–∞

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—á–Ω–∏ —Å **MongoDB Atlas**.
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π
- –ü—Ä–æ—Å—Ç–æ–π setup
- –õ–µ–≥–∫–æ –º–µ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É

–°–æ–∑–¥–∞—Ç—å Next.js –ø—Ä–æ–µ–∫—Ç —Å MongoDB? [Y/n]

–¢—ã: –î–∞! –°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É:

nextjs-blog/
‚îú‚îÄ‚îÄ app/ (App Router)
‚îú‚îÄ‚îÄ lib/
‚îÇ   ‚îî‚îÄ‚îÄ mongodb.ts (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)
‚îî‚îÄ‚îÄ models/
    ‚îú‚îÄ‚îÄ Post.ts
    ‚îî‚îÄ‚îÄ Comment.ts

Claude Code: ‚úÖ –°–æ–∑–¥–∞–ª:

lib/mongodb.ts:
- MongoDB connection
- Singleton pattern (–æ–¥–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)

models/Post.ts:
- TypeScript interface –¥–ª—è Post
- –ì–∏–±–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (optional fields)

app/api/posts/route.ts:
- Server Actions –¥–ª—è CRUD
- POST /api/posts (—Å–æ–∑–¥–∞—Ç—å)
- GET /api/posts (—Å–ø–∏—Å–æ–∫)

.env.example:
MONGODB_URI=mongodb+srv://...

README.md:
- –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å MongoDB Atlas –∫–ª–∞—Å—Ç–µ—Ä
- –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å connection string
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–ì–æ—Ç–æ–≤–æ! –ü–æ–¥–∫–ª—é—á–∏ —Å–≤–æ–π MongoDB URI –∏ —Ç–µ—Å—Ç–∏—Ä—É–π.
```

---

## üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ

### –ó–∞–¥–∞—á–∞

–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–æ–¥–µ–ª–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è EngineCamPro v2 —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥ —Å Claude Code. –¶–µ–ª—å: –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å SQL —Å—Ö–µ–º—É —Å relationships.

---

### –†–∞–±–æ—Ç–∞ —Å Claude Code

**–®–∞–≥ 1:** –û—Ç–∫—Ä–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –ø–∞–ø–∫–µ backend
```bash
cd ~/projects/enginecampro-v2/backend
claude
```

**–®–∞–≥ 2:** –î–∏–∞–ª–æ–≥ —Å Claude Code

```
–¢—ã: –°–æ–∑–¥–∞–π SQLAlchemy –º–æ–¥–µ–ª–∏ –¥–ª—è EngineCamPro v2.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–µ–∫—Ç—É:
- Backend: FastAPI
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL (–±—É–¥–µ—Ç Supabase)
- Python 3.11+
- SQLAlchemy 2.0+ (async)

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:

1. Users (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
   - id: VARCHAR(255) PK (Clerk user ID)
   - email: VARCHAR(255) UNIQUE
   - subscription_status: VARCHAR(50) ('free', 'pro', 'enterprise')
   - created_at, updated_at: TIMESTAMP

2. Projects (–ø—Ä–æ–µ–∫—Ç—ã –∫—É–ª–∞—á–∫–æ–≤)
   - id: SERIAL PK
   - user_id: VARCHAR(255) FK ‚Üí users.id
   - name: VARCHAR(255)
   - description: TEXT (optional)
   - created_at, updated_at: TIMESTAMP

3. Cams (–∫—É–ª–∞—á–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ)
   - id: SERIAL PK
   - project_id: INTEGER FK ‚Üí projects.id
   - name: VARCHAR(255)
   - cam_type: VARCHAR(50) ('intake', 'exhaust')
   - lift: DECIMAL(5,2) (–º–º)
   - duration: INTEGER (–≥—Ä–∞–¥—É—Å—ã)
   - profile_points: JSONB (–º–∞—Å—Å–∏–≤ —Ç–æ—á–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è)
   - created_at, updated_at: TIMESTAMP

Relationships:
- User HAS MANY Projects
- Project HAS MANY Cams
- CASCADE DELETE: —É–¥–∞–ª–∏–ª –ø—Ä–æ–µ–∫—Ç ‚Üí —É–¥–∞–ª–∏–ª–∏—Å—å cams

–§–∞–π–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è:
- app/database.py (connection + session)
- app/models/user.py
- app/models/project.py
- app/models/cam.py
- app/models/__init__.py (—ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π)

Best practices:
- Async SQLAlchemy (AsyncSession)
- Indexes –¥–ª—è FK (–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
- Timestamps —á–µ—Ä–µ–∑ mixin
- Type hints

Claude Code: –û—Ç–ª–∏—á–Ω–æ! –ü–ª–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è:

1. app/database.py:
   - Async engine
   - AsyncSession factory
   - Base class –¥–ª—è –º–æ–¥–µ–ª–µ–π
   - get_db() dependency

2. app/models/base.py:
   - TimestampMixin (created_at, updated_at)
   - Base class

3. app/models/user.py:
   - User –º–æ–¥–µ–ª—å
   - Relationship –Ω–∞ projects

4. app/models/project.py:
   - Project –º–æ–¥–µ–ª—å
   - FK –Ω–∞ users
   - Relationship –Ω–∞ cams

5. app/models/cam.py:
   - Cam –º–æ–¥–µ–ª—å
   - FK –Ω–∞ projects
   - JSONB –¥–ª—è profile_points

Indexes:
- users.email (UNIQUE)
- projects.user_id
- cams.project_id

–ü—Ä–∏–º–µ–Ω–∏—Ç—å? [Y/n]

–¢—ã: Y

Claude Code: ‚úÖ –°–æ–∑–¥–∞–ª SQLAlchemy –º–æ–¥–µ–ª–∏!

app/database.py:
```python
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker, declarative_base

DATABASE_URL = "postgresql+asyncpg://user:pass@localhost/db"

engine = create_async_engine(DATABASE_URL, echo=True)
AsyncSessionLocal = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)
Base = declarative_base()

async def get_db():
    async with AsyncSessionLocal() as session:
        yield session
```

app/models/user.py:
```python
from sqlalchemy import Column, String, DateTime
from sqlalchemy.orm import relationship
from datetime import datetime
from app.database import Base

class User(Base):
    __tablename__ = "users"
    
    id = Column(String(255), primary_key=True)
    email = Column(String(255), unique=True, nullable=False, index=True)
    subscription_status = Column(String(50), default="free")
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    # Relationships
    projects = relationship("Project", back_populates="user", cascade="all, delete-orphan")
```

app/models/project.py:
```python
from sqlalchemy import Column, Integer, String, Text, DateTime, ForeignKey
from sqlalchemy.orm import relationship
from datetime import datetime
from app.database import Base

class Project(Base):
    __tablename__ = "projects"
    
    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(String(255), ForeignKey("users.id"), nullable=False, index=True)
    name = Column(String(255), nullable=False)
    description = Column(Text)
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    # Relationships
    user = relationship("User", back_populates="projects")
    cams = relationship("Cam", back_populates="project", cascade="all, delete-orphan")
```

app/models/cam.py:
```python
from sqlalchemy import Column, Integer, String, Numeric, DateTime, ForeignKey
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.orm import relationship
from datetime import datetime
from app.database import Base

class Cam(Base):
    __tablename__ = "cams"
    
    id = Column(Integer, primary_key=True, index=True)
    project_id = Column(Integer, ForeignKey("projects.id"), nullable=False, index=True)
    name = Column(String(255), nullable=False)
    cam_type = Column(String(50), nullable=False)
    lift = Column(Numeric(5, 2), nullable=False)
    duration = Column(Integer, nullable=False)
    profile_points = Column(JSONB)
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    # Relationships
    project = relationship("Project", back_populates="cams")
```

app/models/__init__.py:
```python
from app.models.user import User
from app.models.project import Project
from app.models.cam import Cam

__all__ = ["User", "Project", "Cam"]
```

–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: —Å–æ–∑–¥–∞—Ç—å Pydantic —Å—Ö–µ–º—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏?

–¢—ã: –î–∞! –°–æ–∑–¥–∞–π Pydantic —Å—Ö–µ–º—ã –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π.

Claude Code: –°–æ–∑–¥–∞–º Request/Response —Å—Ö–µ–º—ã:

app/schemas/user.py:
- UserBase
- UserCreate
- UserResponse

app/schemas/project.py:
- ProjectBase
- ProjectCreate
- ProjectUpdate
- ProjectResponse

app/schemas/cam.py:
- CamBase
- CamCreate
- CamUpdate
- CamResponse
- ProfilePoint (–¥–ª—è profile_points)

–ü—Ä–∏–º–µ–Ω–∏—Ç—å? [Y/n]

–¢—ã: Y

Claude Code: ‚úÖ –°–æ–∑–¥–∞–ª Pydantic —Å—Ö–µ–º—ã!

[–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ö–µ–º]

–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å:
1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å DATABASE_URL –≤ .env
2. –°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Alembic
3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ –≤ endpoints
```

---

**–®–∞–≥ 3:** –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π:

```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install sqlalchemy asyncpg psycopg2-binary alembic

# –°–æ–∑–¥–∞–π .env —Ñ–∞–π–ª
DATABASE_URL=postgresql+asyncpg://user:pass@localhost:5432/enginecampro

# –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
python3 -c "from app.models import User, Project, Cam; print('Models OK!')"
```

**–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**
```
Models OK!
```

---

## ‚ùì –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏

–û—Ç–≤–µ—Ç—å –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ (–±–µ–∑ –ø–æ–¥–≥–ª—è–¥—ã–≤–∞–Ω–∏—è –≤ —É—Ä–æ–∫!):

### 1. –û–±—ä—è—Å–Ω–∏ —Ä–∞–∑–Ω–∏—Ü—É SQL vs NoSQL —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–æ–≥–∏—é
*–ü—Ä–µ–¥—Å—Ç–∞–≤—å —á—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—à—å –¥—Ä—É–≥—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç*

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–ò—Å–ø–æ–ª—å–∑—É–π –∞–Ω–∞–ª–æ–≥–∏—é —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π (SQL) –∏ –∫–æ—Ä–æ–±–∫–∞–º–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ (NoSQL). –û–±—ä—è—Å–Ω–∏ –∫–∞–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞.
</details>

---

### 2. –ö–æ–≥–¥–∞ –≤—ã–±—Ä–∞—Ç—å SQL, –∞ –∫–æ–≥–¥–∞ NoSQL?

–î–∞–π –ø–æ 3 –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ë–î –∏ –æ–±—ä—è—Å–Ω–∏ –ø–æ—á–µ–º—É.

**SQL –ø—Ä–æ–µ–∫—Ç—ã:**
1. _______
2. _______
3. _______

**NoSQL –ø—Ä–æ–µ–∫—Ç—ã:**
1. _______
2. _______
3. _______

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–ü–æ–¥—É–º–∞–π –ø—Ä–æ:
- –ù–∞–ª–∏—á–∏–µ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –¥–∞–Ω–Ω—ã–º–∏
- –ì–∏–±–∫–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- –°–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤
- –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
</details>

---

### 3. –ü–æ—á–µ–º—É EngineCamPro v2 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PostgreSQL, –∞ –Ω–µ MongoDB?

–ü–µ—Ä–µ—á–∏—Å–ª–∏ –º–∏–Ω–∏–º—É–º 4 –ø—Ä–∏—á–∏–Ω—ã.

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–í—Å–ø–æ–º–Ω–∏:
- –°—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö (Users ‚Üí Projects ‚Üí Cams)
- –¢–∏–ø—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã
- –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—é (—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)
- Python ORM
</details>

---

### 4. –ü—Ä–æ—Å—Ç–æ–π –±–ª–æ–≥ vs E-commerce: –∫–∞–∫–∞—è –ë–î?

–û–±—ä—è—Å–Ω–∏ –ø–æ—á–µ–º—É –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –±–ª–æ–≥–∞ –ø–æ–¥–æ–π–¥—ë—Ç NoSQL, –∞ –¥–ª—è e-commerce –Ω—É–∂–µ–Ω SQL.

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–ü–æ–¥—É–º–∞–π –ø—Ä–æ:
- –°—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö (–ø–æ—Å—Ç—ã vs –∑–∞–∫–∞–∑—ã/—Ç–æ–≤–∞—Ä—ã)
- –ù—É–∂–Ω—ã –ª–∏ —Å–≤—è–∑–∏
- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–ø–ª–∞—Ç–µ–∂–∏)
- –ì–∏–±–∫–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
</details>

---

### 5. –ï—Å–ª–∏ –±—ã —Ç—ã –¥–∞–≤–∞–ª –∑–∞–¥–∞–Ω–∏–µ Claude Code

–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –¥–∏–∞–ª–æ–≥ —Å Claude Code –¥–ª—è –≤—ã–±–æ—Ä–∞ –ë–î –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ "–æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º". –ö–∞–∫—É—é –ë–î –≤—ã–±–µ—Ä–µ—à—å –∏ –ø–æ—á–µ–º—É?

<details>
<summary>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞</summary>

–û–ø–∏—à–∏ –ø—Ä–æ–µ–∫—Ç Claude Code:
- –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è (users, courses, chat history)
- –ö–∞–∫–∏–µ —Å–≤—è–∑–∏ –Ω—É–∂–Ω—ã
- –ù—É–∂–µ–Ω –ª–∏ RAG + vector search
- –ú–æ–∂–µ—Ç –±—ã—Ç—å –≥–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥?
</details>

---

## üîó –°–≤—è–∑—å —Å –¥—Ä—É–≥–∏–º–∏ —É—Ä–æ–∫–∞–º–∏

**–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ —É—Ä–æ–∫–∞—Ö:**
- **–ú–æ–¥—É–ª—å 1:** Client-Server –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ - –ë–î –Ω–∞ server-side
- **–ú–æ–¥—É–ª—å 2:** Backend —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - FastAPI –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ë–î —á–µ—Ä–µ–∑ ORM

**–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫ —É—Ä–æ–∫–∞–º:**
- **–£—Ä–æ–∫ 3.2:** PostgreSQL –∏ SQLAlchemy ORM - –¥–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å SQL
- **–£—Ä–æ–∫ 3.3:** –ú–∏–≥—Ä–∞—Ü–∏–∏ - —ç–≤–æ–ª—é—Ü–∏—è —Å—Ö–µ–º—ã –ë–î
- **–£—Ä–æ–∫ 3.4:** Supabase - Backend-as-a-Service –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞

**–°–≤—è–∑—å —Å EngineCamPro:**
- –≠—Ç–æ—Ç —É—Ä–æ–∫ –æ–±—ä—è—Å–Ω—è–µ—Ç **–ø–æ—á–µ–º—É** –º—ã –≤—ã–±–∏—Ä–∞–µ–º PostgreSQL –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
- –ü–æ–Ω–∏–º–∞–Ω–∏–µ SQL vs NoSQL –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –±—É–¥—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
- –í —É—Ä–æ–∫–µ 3.2 –º—ã –¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑—É—á–∏–º SQLAlchemy –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PostgreSQL

**–°–≤—è–∑—å —Å Next.js (–ú–æ–¥—É–ª—å 8) –∏ RAG (–ú–æ–¥—É–ª—å 9):**
- –í –ú–æ–¥—É–ª–µ 8 —É–≤–∏–¥–∏—à—å –∫–æ–≥–¥–∞ Next.js + NoSQL (MongoDB) - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
- –í –ú–æ–¥—É–ª–µ 9 —É–∑–Ω–∞–µ—à—å –ø—Ä–æ Vector Databases –¥–ª—è RAG —Å–∏—Å—Ç–µ–º (–≥–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥ SQL + Vector DB)

---

## ‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞

**–ü–æ–Ω–∏–º–∞–Ω–∏–µ (–º–æ–≥—É –æ–±—ä—è—Å–Ω–∏—Ç—å):**
- [ ] –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É SQL –∏ NoSQL
- [ ] –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQL, –∫–æ–≥–¥–∞ NoSQL (—Å –ø—Ä–∏–º–µ—Ä–∞–º–∏)
- [ ] –ü–æ—á–µ–º—É EngineCamPro –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PostgreSQL (–º–∏–Ω–∏–º—É–º 3 –ø—Ä–∏—á–∏–Ω—ã)
- [ ] –ö–∞–∫ —Å–≤—è–∑–∏ (relationships) —Ä–∞–±–æ—Ç–∞—é—Ç –≤ SQL vs NoSQL

**–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏:**
- [ ] –ú–æ–≥—É –æ–±–æ—Å–Ω–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä –ë–î –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
- [ ] –ú–æ–≥—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –≤—ã–±–æ—Ä –ë–î —Å Claude Code
- [ ] –ü–æ–Ω–∏–º–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–æ–¥–µ–ª–µ–π EngineCamPro (Users ‚Üí Projects ‚Üí Cams)

**–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É:**
- [ ] –í—ã–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ (—Å–æ–∑–¥–∞–Ω—ã SQLAlchemy –º–æ–¥–µ–ª–∏)
- [ ] –ü–æ–Ω–∏–º–∞—é –∑–∞—á–µ–º –Ω—É–∂–µ–Ω ORM (SQLAlchemy)
- [ ] –ì–æ—Ç–æ–≤ –∏–∑—É—á–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î (Alembic)

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:**
- [ ] –ó–∞–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤—ã–≤–æ–¥—ã –≤ `notes/module-3/lesson-3-1-notes.md`
- [ ] –û—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏
- [ ] –ü–æ–Ω–∏–º–∞—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ç—Ä—ë—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∫—É—Ä—Å–∞

---

## üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã (–¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è)

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:

**–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:**
- [PostgreSQL –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://www.postgresql.org/docs/) - —Å–∞–º–∞—è –º–æ—â–Ω–∞—è open-source SQL –ë–î
- [MongoDB –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://www.mongodb.com/docs/) - –ø–æ–ø—É–ª—è—Ä–Ω–∞—è NoSQL document database
- [SQLAlchemy 2.0 –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://docs.sqlalchemy.org/) - Python ORM –¥–ª—è SQL

**–°—Ç–∞—Ç—å–∏:**
- [SQL vs NoSQL: When to use each](https://www.mongodb.com/nosql-explained/nosql-vs-sql) - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç—å—è –æ—Ç MongoDB
- [PostgreSQL vs MySQL](https://www.postgresqltutorial.com/postgresql-vs-mysql/) - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ SQL –±–∞–∑

**–í–∏–¥–µ–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):**
- Fireship: "SQL vs NoSQL Explained in 100 Seconds"
- Web Dev Simplified: "Learn Database Normalization"

**–ù–û!** –≠—Ç–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∫—É—Ä—Å–∞. –ì–ª–∞–≤–Ω–æ–µ - –ø–æ–Ω—è—Ç—å –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –∏–∑ —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –∏ —É–º–µ—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä –ë–î.

---

**–°—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞:** ‚è≥ –ù–µ –Ω–∞—á–∞—Ç  
**–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:** _________  
**–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:** _________  
**–í—Ä–µ–º—è –ø–æ—Ç—Ä–∞—á–µ–Ω–æ:** _______ –º–∏–Ω—É—Ç

---

## üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!

–¢—ã —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—à—å —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É SQL –∏ NoSQL –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –º–æ–∂–µ—à—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –æ –≤—ã–±–æ—Ä–µ –ë–î –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤!

**–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ (3.2)** –º—ã –¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑—É—á–∏–º PostgreSQL –∏ SQLAlchemy ORM –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏–∑ Python/FastAPI –∫–æ–¥–∞.

**–ü–æ–º–Ω–∏:** –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –ë–î –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞ = –º–µ–Ω—å—à–µ –±–æ–ª–∏ –≤ –±—É–¥—É—â–µ–º! üöÄ